

package diplom;

import static diplom.AlternativeList.idListSelect;
import static diplom.Diplom.*;
import java.awt.Component;
import static java.lang.Math.pow;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Artemi
 */
public class MAI extends javax.swing.JFrame implements TableModelListener{
    public static Double[] genRes;
    public static int count = 0;
    public static String[] titles = {"Страна", "Город", "Отель", "Жилье", "Питание", "Длительность", "Туроператор"};
    final static Map <Integer, Double> misList= new HashMap<>();

    static String[] getResultsList() {
        String[] res = new String[idListSelect.length];
        for (int i = 0; i<res.length; i++){
            int y = i+1;
            try {
                res[i] = y + ". Приоритет: " + genRes[i] + " Тур: " + getFullString(idListSelect[i]);
            } catch (SQLException ex) {
                Logger.getLogger(MAI.class.getName()).log(Level.SEVERE, null, ex);
                res[i] = "Ошибка в бд";
            }
        }
        return res;//To change body of generated methods, choose Tools | Templates.
    }
    TableModelListener tl = new TableModelListener() {

        @Override
        public void tableChanged(TableModelEvent e){
           {
            int row = e.getFirstRow();
            int column = e.getColumn();
            TableModel model = (TableModel)e.getSource();
            model.removeTableModelListener(this); 
            Double res;
            
            try {
                if (Double.parseDouble(String.valueOf(model.getValueAt(row, column))) < 0 || Double.parseDouble(String.valueOf(model.getValueAt(row, column)))>9) model.setValueAt(null, row, column);
                else {
                    res = 1 / Double.parseDouble(String.valueOf(model.getValueAt(row, column)));
                    model.setValueAt(res, column, row);
                     }
            }
            catch (NumberFormatException ex)
            {
                model.setValueAt(null, row, column);
            }
            if (row == column) model.setValueAt("1", row, column);
            model.addTableModelListener(tl);
        }  //To change body of generated methods, choose Tools | Templates.
        }
    };
    private Component frame;

    /**
     * Creates new form MAI
     */
    public MAI() {
        
        initComponents();
        JTable[] tables = { genTable, countryTable, cityTable, hotelTable, apartTable, foodTable, longTable, operTable };
        for (JTable t : tables)
        {
            initCells(t.getModel());
            t.getModel().addTableModelListener(tl);
        }
        misList.put(3, 0.58);
        misList.put(4, 0.9);
        misList.put(5, 1.12);
        misList.put(6, 1.24);
        misList.put(7, 1.32);
       

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        genTable = new JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        countryTableName = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        countryTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cityTableName = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        cityTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        hotelTableName = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        hotelTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        apartTableName = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        apartTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        foodTableName = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        foodTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        longTableName = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        longTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        operTableName = new javax.swing.JTable();
        jScrollPane17 = new javax.swing.JScrollPane();
        operTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);

        jTabbedPane2.setName("hotelTable"); // NOI18N

        genTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Страна", "Город", "Отель", "Жилье", "Питание", "Длительность", "Туроператор"
            }
        ));
        genTable.setName("genTable"); // NOI18N
        genTable.setRequestFocusEnabled(false);
        jScrollPane2.setViewportView(genTable);

        jLabel1.setText("Страна");

        jLabel2.setText("Город");

        jLabel3.setText("Отель");

        jLabel4.setText("Жилье");

        jLabel5.setText("Питание");

        jLabel6.setText("Длительность");

        jLabel7.setText("Туроператор");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))))
        );

        jTabbedPane2.addTab("Общие", jPanel2);

        countryTableName.setModel(createTableTitle());
        jScrollPane6.setViewportView(countryTableName);

        countryTable.setModel(createMaiTable());
        countryTable.setName("countryTable"); // NOI18N
        jScrollPane7.setViewportView(countryTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Страна", jPanel3);

        cityTableName.setModel(createTableTitle());
        jScrollPane4.setViewportView(cityTableName);

        cityTable.setModel(createMaiTable());
        cityTable.setName("cityTable"); // NOI18N
        jScrollPane5.setViewportView(cityTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Город", jPanel4);

        hotelTableName.setModel(createTableTitle());
        jScrollPane8.setViewportView(hotelTableName);

        hotelTable.setModel(createMaiTable());
        hotelTable.setName("hotelTable"); // NOI18N
        jScrollPane9.setViewportView(hotelTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Отель", jPanel5);

        apartTableName.setModel(createTableTitle());
        jScrollPane10.setViewportView(apartTableName);

        apartTable.setModel(createMaiTable());
        apartTable.setName("apartTable"); // NOI18N
        jScrollPane11.setViewportView(apartTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Жилье", jPanel6);

        foodTableName.setModel(createTableTitle());
        jScrollPane12.setViewportView(foodTableName);

        foodTable.setModel(createMaiTable());
        foodTable.setName("foodTable"); // NOI18N
        jScrollPane13.setViewportView(foodTable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Питание", jPanel7);

        longTableName.setModel(createTableTitle());
        jScrollPane14.setViewportView(longTableName);

        longTable.setModel(createMaiTable());
        longTable.setName("longTable"); // NOI18N
        jScrollPane15.setViewportView(longTable);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Длительность", jPanel8);

        operTableName.setModel(createTableTitle());
        jScrollPane16.setViewportView(operTableName);

        operTable.setModel(createMaiTable());
        operTable.setName("operTable"); // NOI18N
        jScrollPane17.setViewportView(operTable);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Туроператор", jPanel9);

        jButton1.setText("Проверка на согласованность");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Получить результаты");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Введите экспертные оценки в диапозоне от 1 до 9. При необходимости, можно проверить матрицу на согласованность.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
        if (selTable(jTabbedPane2.getSelectedIndex()).getColumnCount() == 1 || selTable(jTabbedPane2.getSelectedIndex()).getColumnCount() == 2) JOptionPane.showMessageDialog(frame, "Матрица не нуждается в оценке согласованности!");
                else {
                    double os = getOS(selTable(jTabbedPane2.getSelectedIndex()));
                    if (os > 0.1) JOptionPane.showMessageDialog(frame, "Матрица не согласована! Индекс отношения согласованности: " + os);
                    else JOptionPane.showMessageDialog(frame, "Матрица согласована! Индекс отношения согласованности: " + os);
                }
        }
        catch (NullPointerException | NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(frame, "Значения пусты либо имеют неправильный формат!");
        }
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                    if (tablesCheck()) {
                        genRes = getResList(idListSelect);
                        timeForBubble(genRes, idListSelect);
                        new Finish().setVisible(true);
                        
                    }
                    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable apartTable;
    private javax.swing.JTable apartTableName;
    private javax.swing.JTable cityTable;
    private javax.swing.JTable cityTableName;
    private javax.swing.JTable countryTable;
    private javax.swing.JTable countryTableName;
    private javax.swing.JTable foodTable;
    private javax.swing.JTable foodTableName;
    private javax.swing.JTable genTable;
    private javax.swing.JTable hotelTable;
    private javax.swing.JTable hotelTableName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable longTable;
    private javax.swing.JTable longTableName;
    private javax.swing.JTable operTable;
    private javax.swing.JTable operTableName;
    // End of variables declaration//GEN-END:variables


    @Override
    public void tableChanged(TableModelEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void initCells(TableModel table) {
        for (int i = 0; i<table.getRowCount(); i++)
            for (int j = 0; j<table.getColumnCount(); j++)
            {
                if(j==i) 
                {
                    table.setValueAt("1", i, j);
                }
                
            }//To change body of generated methods, choose Tools | Templates.

    }

    private TableModel createMaiTable()  {
        ArrayList<String> list= new ArrayList<>();
        
         for (int x : idListSelect)
         {
             if (!list.contains(getMethod(x, count))) list.add(getMethod(x, count));
         }
        String[] colNames = list.toArray(new String [list.size()]);
        TableModel tb = new DefaultTableModel(colNames, colNames.length);
        initCells(tb);
                count++;
        return tb;
//To change body of generated methods, choose Tools | Templates.
    }

    private TableModel createTableTitle() {
        ArrayList<String> countries= new ArrayList<>();
            
        for (int x : idListSelect)
         {
             if (!countries.contains(getMethod(x, count))) countries.add(getMethod(x, count));
         }

        String[] rowNames = countries.toArray(new String [countries.size()]);
        String[][] cNames = new String[rowNames.length][1];
        for (int i = 0; i < rowNames.length; i++)
            cNames[i][0] = rowNames[i];
        String[] title = {titles[count]};
        TableModel tb = new DefaultTableModel(cNames, title);
        return tb; //To change body of generated methods, choose Tools | Templates.
    }

    private String getMethod(int x, int c) {
        try{
        switch (c) {
            case 0 :
                return getTourCountry(x);
                case 1 :
                return getTourCity(x);
                    case 2 :
                return getTourHotelName(x)+getTourHotelCat(x);
                        case 3 :
                return getTourApart(x);
                            case 4 :
                return getTourFood(x);
                                case 5 :
                return getTourLong(x);
                                    case 6 :
                return getTourOper(x);
        }
        }
        catch (SQLException ex)
        {
          return String.valueOf(x);
        }
        return String.valueOf(x);
         //To change body of generated methods, choose Tools | Templates.
    }

    private JTable selTable(int selectedIndex) {
        switch(selectedIndex) {
            case 0 :
                return genTable;
            case 1 :
                return countryTable;
                case 2 :
                return cityTable;
                    case 3 :
                return hotelTable;
                        case 4 :
                return apartTable;
                            case 5 :
                return foodTable;
                                case 6 :
                return longTable;
                                    case 7 :
                return operTable;
        }//To change body of generated methods, choose Tools | Templates.
     return null;
    }

    private double getOS(JTable selTable) {
         int n = selTable.getColumnCount();
         double os;
         double is;
         double mis = misList.get(selTable.getColumnCount());
         double maxOwn = 0;
         double[] xn = new double[n];
         double[] an = new double[n];
         for (int i = 0; i < n; i++)
         {
             double apr = 1;
             for (int j = 0; j < n; j++)
             {
                 apr = apr * Double.parseDouble(String.valueOf(selTable.getValueAt(i,j)));
             }
             an[i] = pow(apr, 1.0/(double)n);
             }
         double asum = 0;
         for (double ann : an) asum = asum + ann;
         for (int i = 0; i < n; i++)
             xn[i] = an[i]/asum;
         double[] aj = new double[n];
         for (int j = 0; j < n; j++) {
             double ajsum = 0;
                for (int i = 0; i < n; i++)
                {
                    ajsum = ajsum + Double.parseDouble(String.valueOf(selTable.getValueAt(i,j)));
                }
              aj[j] = ajsum;
         }
         for (int k = 0; k < n; k ++)
             maxOwn = maxOwn + (aj[k]*xn[k]);
         is = (maxOwn - n)/(n-1);
         os = is/mis;
         
         
         
         //To change body of generated methods, choose Tools | Templates.
    return os;
    }

    private boolean tablesCheck() {
        JTable[] tables = { genTable, countryTable, cityTable, hotelTable, apartTable, foodTable, longTable, operTable };
                    for (JTable table : tables)
                            for (int i = 0; i < table.getRowCount(); i++) 
                                for (int j = 0; j < table.getColumnCount(); j ++)
                                {
                                    try {
                                        double a = Double.parseDouble(String.valueOf(table.getValueAt(i, j)));
                                    }
                                    catch (NullPointerException | NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(frame, "У вас остались незаполненные ячейки!");
            return false;
        }
                                }
                    return true;//To change body of generated methods, choose Tools | Templates.
    }

    private Double[] getResList(int[] idListSelect) {
        Double resList[] = new Double[idListSelect.length];
       for (int i=0; i < resList.length; i++) resList[i] = getResult(idListSelect[i]);
                //To change body of generated methods, choose Tools | Templates.
    return resList;
    }

    private double[] getVectorList(JTable table, JTable tableName) {
      int n = table.getColumnCount();
        double[] an = new double[n];
      for (int i = 0; i < n; i++)
         {
             double apr = 1;
             for (int j = 0; j < n; j++)
             {
                 apr = apr * Double.parseDouble(String.valueOf(table.getValueAt(i,j)));
             }
             an[i] = pow(apr, 1.0/(double)n);
             }
         double asum = 0;
         for (double ann : an) asum = asum + ann;
        double[] xn = new double[n];
         for (int i = 0; i < n; i++)
             xn[i] = an[i]/asum;
         if (table.getColumnCount()<idListSelect.length)
         {
             xn = getRightVectorList(table, xn, tableName);
             
         }
         
            return xn; //To change body of generated methods, choose Tools | Templates.
    } 

    private double getResult(int k) {
        double result = 0;
        double[] genVector = getVectorList(genTable, null);
        JTable[] tables = { countryTable, cityTable, hotelTable, apartTable, foodTable, longTable, operTable };
        JTable[] tablesName = { countryTableName, cityTableName, hotelTableName, apartTableName, foodTableName, longTableName, operTableName };
        for (int i = 0; i < tables.length; i++)
        {
            double secVect = 0;
            double[] secList = getVectorList(tables[i], tablesName[i]);
            for (int j = 0; j < secList.length; j++)
                if (getMethod(k, i).equals(String.valueOf(tablesName[i].getValueAt(j, 0))))
                    secVect = secList[j];
            result = result + (genVector[i]*secVect);
                    
        }
         return result;//To change body of generated methods, choose Tools | Templates.
    }


    private double[] getRightVectorList(JTable table, double[] xn, JTable tableName) {
        double[] newXn = new double[tableName.getRowCount()];
        int[] titleCount = new int[newXn.length];
        for (int i = 0; i < titleCount.length; i++){
            titleCount[i]=0;
            for (int j = 0; j < idListSelect.length; j++)
            {   
                if (String.valueOf(tableName.getValueAt(i, 0)).equals(getMethod(idListSelect[j], getTableIndex(table))))
                    titleCount[i]++;
            }
        }
        double newXnSum = 0;
        for (int i = 0; i < newXn.length; i ++)
        {
            newXn[i] = xn[i] * (double)titleCount[i];
            newXnSum = newXnSum + newXn[i];
        }
        for (int i = 0; i < newXn.length; i++)
        {
            newXn[i] = (newXn[i]/newXnSum)/(double)titleCount[i];
        }
            
            
            return newXn;
            //To change body of generated methods, choose Tools | Templates.
    }
    private int getTableIndex(JTable table) {
        switch(table.getName()) {
            case "countryTable" :
                return 0;
                case "cityTable" :
                return 1;
                    case "hotelTable" :
                return 2;
                        case "apartTable":
                return 3;
                            case "foodTable" :
                return 4;
                                case "longTable" :
                return 5;
                                    case "operTable" :
                return 6;
                                        
        }//To change body of generated methods, choose Tools | Templates.
     return 0;
    }

    private void timeForBubble(Double[] koffListForSort, int[] idListForSort) {
        for (int i = 0; i < koffListForSort.length; i++){
        for ( int j = koffListForSort.length-1; j>i;j--){
             if (koffListForSort[j]>koffListForSort[j-1])
             {
                 double tempDouble = koffListForSort[j];
                 int tempInt = idListForSort[j];
                 koffListForSort[j] = koffListForSort[j-1]; 
                   idListForSort[j] = idListForSort[j-1];
                   koffListForSort[j-1] = tempDouble;
                   idListForSort[j-1] = tempInt;
             }
        }
        }
    
    } //To change body of generated methods, choose Tools | Templates.
    }

 




